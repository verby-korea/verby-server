version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.13
  aws-code-deploy: circleci/aws-code-deploy@0.0.12
jobs:
  # API server 빌드
  build-api:
    filters:
      paths:
        include:
          - "api-server/**"
          - "core/**"
    docker:
      - image: circleci/openjdk:17-jdk-buster
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - save_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle

      - run:
          command: ./gradlew :api-server:build

      - persist_to_workspace:
          root: ./api-server
          paths:
            - '*/build/libs/api-consumer-server-0.0.1.jar'
  # Batch server 빌드
  build-batch:
    filters:
      paths:
        include:
          - "batch-server/**"
          - "core/**"
    docker:
      - image: circleci/openjdk:17-jdk-buster
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - save_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle

      - run:
          command: ./gradlew :batch-server:build

      - persist_to_workspace:
          root: ./batch-server
          paths:
            - '*/build/libs/batch-server-0.0.1.jar'
  # Internal consumer server 빌드
  build-consumer:
    filters:
      paths:
        include:
          - "internal-consumer-server/**"
          - "core/**"
    docker:
      - image: circleci/openjdk:17-jdk-buster
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - save_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle

      - run:
          command: ./gradlew :internal-consumer-server:build

      - persist_to_workspace:
          root: ./internal-consumer-server
          paths:
            - '*/build/libs/internal-consumer-server-0.0.1.jar'

  deploy-api:
    docker:
      - image: circleci/python:2.7

    steps:
      - attach_workspace:
          at: .

      - aws-s3/copy:
          from: '*/build/libs/api-server-0.0.1.jar'
          to: 's3://verby-deploy'
          aws-region: AWS_DEFAULT_REGION

      - aws-code-deploy/deploy-bundle:
          application-name: verby-server
          deployment-group: verby-group
          deployment-config: CodeDeployDefault.AllAtOnce
          bundle-bucket: verby-deploy
          bundle-key: api-server-0.0.1
          bundle-type: jar

  deploy-batch:
    docker:
      - image: circleci/python:2.7

    steps:
      - attach_workspace:
          at: .

      - aws-s3/copy:
          from: '*/build/libs/batch-server-0.0.1.jar'
          to: 's3://verby-deploy'
          aws-region: AWS_DEFAULT_REGION

      - aws-code-deploy/deploy-bundle:
          application-name: verby-server
          deployment-group: verby-group
          deployment-config: CodeDeployDefault.AllAtOnce
          bundle-bucket: verby-deploy
          bundle-key: batch-server-0.0.1
          bundle-type: jar

  deploy-consumer:
    docker:
      - image: circleci/python:2.7

    steps:
      - attach_workspace:
          at: .

      - aws-s3/copy:
          from: '*/build/libs/internal-consumer-server-0.0.1.jar'
          to: 's3://verby-deploy'
          aws-region: AWS_DEFAULT_REGION

      - aws-code-deploy/deploy-bundle:
          application-name: verby-server
          deployment-group: verby-group
          deployment-config: CodeDeployDefault.AllAtOnce
          bundle-bucket: verby-deploy
          bundle-key: internal-consumer-server-0.0.1
          bundle-type: jar

workflows:
  version: 2

  build-deploy:
    jobs:
      - build-api
      - build-batch
      - build-consumer
      - deploy-api:
          context: AWS
          requires:
            - build-api
      - deploy-batch:
          context: AWS
          requires:
            - build-batch
      - deploy-consumer:
          context: AWS
          requires:
            - build-consumer